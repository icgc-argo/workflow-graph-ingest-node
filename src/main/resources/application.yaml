server:
  port : 8082

management:
  endpoints.web.exposure.include: health
  health.binders.enabled: true

spring:
  # Rabbitmq config
  rabbitmq:
    host: localhost
    port: 5672
    username: user
    password: pass

  # Kafka broker config
  cloud.stream.kafka.binder.brokers: localhost:9092

  # cloud stream config
  cloud.stream:
    function:
      definition: processor
      bindings:
        processor-in-0: inbound
        processor-out-0: outbound
    bindings:
      inbound:
        group: publish
        destination: published # kafka topic to listen to
        binder: kafka
        consumer:
          maxAttempts: 5
          backOffInitialInterval: 5000 # milliseconds
          backOffMaxInterval: 60000 # milliseconds
          backOffMultiplier: 2.0
      outbound:
        binder: rabbit
        destination: start # rabbitmq exchange/topic to send messages to
        producer.requiredGroups: start-default # default queues created on exchange (comma separated list)
    rabbit.bindings.outbound.producer.exchangeType: fanout
    rabbit.bindings.outbound.producer.queueNameGroupOnly: true
    kafka.bindings.inbound.consumer:
      enableDlq: true
      dlqName: ingest-published-dlq

rdpc:
  url: http://localhost:8080/graphql
    
---
spring:
  profiles: oauth

rdpc:
  oauth:
    clientId: wfg
    clientSecret: workflowgraph
    tokenUrl: http://localhost:8081/api/oauth/token
    test: x
